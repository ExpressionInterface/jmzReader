<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.ac.ebi.pride.tools</groupId>
	<artifactId>mzxml-parser</artifactId>
	<version>1.3.6-SNAPSHOT</version>
	<packaging>jar</packaging>

	<parent>
		<groupId>uk.ac.ebi.pride.tools</groupId>
		<artifactId>jmzreader-library</artifactId>
		<version>1.2.0-SNAPSHOT</version>
	</parent>

	<name>mzxml-parser</name>
	<description>
        A read-only parser library to parse mzXML files.
        This library was build based on mzXML version 3.2
        but should work for any mzXML file version &gt;= 2.0.
    </description>
	<url>http://code.google.com/p/jmzreader/</url>
	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>jgriss</id>
			<name>Johannes Griss</name>
			<email>jgriss@ebi.ac.uk</email>
			<organization>European Bioinformatics Institute</organization>
			<organizationUrl>http://ebi.ac.uk/pride</organizationUrl>
		</developer>
	</developers>
	<organization>
		<name>European Bioinformatics Institute</name>
		<url>http://www.ebi.ac.uk</url>
	</organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<!-- you can use this plugin to generate the jaxb object model from the 
					schema and binding files specified below. Note: this will need an explicit 
					maven goal call, since it is not intergrated into the standard mvn lifecycle. 
					The goal to use is: org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:0.7.3:generate 
					NOTE: the code generation may overwrite existing classes, so care should 
					be taken with files that were manually modified. -->
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.7.3</version>
				<configuration>
					<extension>true</extension>
					<schemaDirectory>src/main/resources</schemaDirectory>
					<schemaIncludes>
						<include>mzXML_3.2.xsd</include>
					</schemaIncludes>
					<bindingDirectory>src/main/resources</bindingDirectory>
					<bindingIncludes>
						<include>mzxml-bindings.xjb</include>
					</bindingIncludes>
					<!-- NOTE THAT SOURCE IS GENERATED IN A DISTINCT FOLDER -->
					<!-- TO AVOID LOSING CUSTOMIZATIONS IN EXISTING SOURCE -->
					<generateDirectory>src/main/java</generateDirectory>
					<removeOldOutput>false</removeOldOutput>
					<forceRegenerate>true</forceRegenerate>
					<verbose>true</verbose>
					<args>
						<arg>-no-header</arg>
					</args>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${language.level}</source>
					<target>${language.level}</target>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <configuration>
                    <attach>false</attach>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.plugin.version}</version>
				<configuration>
					<goals>deploy</goals>
					<autoVersionSubmodules>false</autoVersionSubmodules>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>psidev.psi.tools</groupId>
			<artifactId>xxindex</artifactId>
			<version>${xxindex.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.ac.ebi.pride.tools</groupId>
			<artifactId>jmzreader</artifactId>
			<version>1.2.2-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>nexus-ebi-repo-old</id>
			<url>http://www.ebi.ac.uk/intact/maven/nexus/content/repositories/ebi-repo/</url>
		</repository>
		<repository>
			<id>nexus-ebi-release-repo</id>
			<url>http://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
		</repository>
		<repository>
			<id>nexus-ebi-snapshot-repo</id>
			<url>http://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-snapshots/</url>
		</repository>
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>

		<repository>
			<id>JBoss</id>
			<name>JBoss repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>

	<!-- PluginRepositores -->
	<pluginRepositories>
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- Overwrites the previous repositories-->
	<distributionManagement>
		<!-- EBI repo -->
		<repository>
			<id>pst-release</id>
			<name>EBI Nexus Repository</name>
			<url>http://www.ebi.ac.uk/Tools/maven/repos/content/repositories/pst-release</url>
		</repository>
		<!-- EBI SNAPSHOT repo -->
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>pst-snapshots</id>
			<name>EBI Nexus Snapshots Repository</name>
			<url>http://www.ebi.ac.uk/Tools/maven/repos/content/repositories/pst-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

</project>
